
"openapi": "3.0.0"
"info":
  "title": "ODIN Rest API"
  "version": "1.1.0"
  "description": "ODIN Rest API allows the developer to create a custom trading application for Web or Mobile communicating with ODIN Order Management System (OMS). This REST based API allows user to develop the following functionalities for Trading Application / Portal. <br> <br> Salient Features: <ul> <li>User Authentication and Profile management</li> <li>Order Management </li> <li>Portfolio information management</li> </ul> <br /> This step-by- step guide will assist you through the entire flow of API implementation; right from authentication, to handle the request and response structure of the API."
  "contact":
    "url": "https://synapsewave.com/"
    "email": "apisupport@synapsewave.com"
  "x-logo":
    "url": "./images/logo.svg"
    "altText": "Synapsewave Logo"
"servers":
  -
    "url": "http://localhost:3100/"
    "description": "Development Server"
  -
    "url": "http://localhost:3200/"
    "description": "Production Server"
"x-tagGroups":
  -
    "name": "Introduction"
    "tags":
      - "Getting Started"
      - "Response Structure"
      - "Exceptions and Errors"
  -
    "name": "API"
    "tags":
      - "User"
      - "Order"
      - "Portfolio"
      - "Price Feed"
      - "Real-time streaming messages"
"tags":
  -
    "name": "Getting Started"
    "description": "ODIN API is a set of REST APIs that provide the platform along with required data to build a Trading Platform, the API specifications is used for communicating with ODIN API Gateway. API specifications are based on the REST protocol that covers the functionalities which are need to develop a trading application like Login / Logout, Order Management (Place Order, Modify Order, Cancel order), Reports like Order Book, Trade Book, Position, Holding & Limit, etc. The REST API supports JSON based request and responses along with data compression. <br/><br/><strong><font size='4px'>Basic Flow to Implement the APIs:</font></strong><br/><br/> <b>STEP 1:</b>Make a Login API call using login credential to obtain the access token.<br/> <b>STEP 2:</b> Use access token obtained from Login API in all the subsequent API calls.<br/> <b>STEP 3:</b> Setting obtained access token and content-type is shown below. <br/> <pre>Header:<br>Content-Type: application/json<br/>Authorization: Bearer eyJ1c2VySUQiOiJSVVBFU0giLCJpYXQiOjE1NTIxMjIwOTEsImV4cCI6MTU1MjIwODQ5MX0</pre>"
  -
    "name": "Response Structure"
    "description": "All GET and DELETE request parameters go as query parameters, and POST and PUT request parameters as json (application/json) parameters, responses from the API are always JSON. Any non-alphanumeric character should be URL encoded in query string and path parameters.<br /><br /><b>Successful Request</b><br /><br /> All responses from the API server are in JSON format with the content-type application/json unless explicitly stated otherwise. A successful 200 OK response always has a JSON response body with a status as success. The data key contains the full response payload.<br /> <pre>HTTP/1.1 200 OK <br />Content-Type: application/json <br />{<br/>   \"status\": \"success\",<br/>   \"code\": \"\",<br/>   \"message\": \"\",<br/>   \"data\": \"{}\"<br/>}</pre> <br /><br /><b>Failed Request</b><br /><br> A failed response is preceded by the corresponding 40x or 50x HTTP header. The status key in the response contains the value error. The message key contains a textual description of the error and code contains the unique error code. The errors key contains fields breakdown of validation errors for POST & Put requests. <br> <pre>HTTP/1.1 500 Server error <br />Content-Type: application/json <br />{<br/>   \"status\": \"error\",<br/>   \"code\": \"\",<br/>   \"message\": \"\",<br/>   \"errors\": \"[]\"<br/>}</pre> <br> <b>Data types</b> <br>Values in JSON responses are of types string, integer, number, or bool. <br> Timestamp (datetime) strings in the responses are represented in the default date format yyyy-mm-dd HH:mm:ss e.g., 2016-01-25 13:33:42. <br>"
  -
    "name": "Exceptions and Errors"
    "description": "The HTTP Status Codes used by the RESTful API. <table><tr><td width=20%><b>HTTP Error Code</b></td><td width=80%><b>Description</b></td></tr><tr><td>400</td><td>Bad Request - Missing or bad request parameters or values. Error message will indicate which one and why.</td><tr> <tr><td>401</td><td>Unauthorized - The access token provided is expired, revoked, malformed, or invalid. Client should refresh relogin and then try again.</td><tr> <tr><td>404</td><td>Not Found - Request resource was not found.</td><tr> <tr><td>405 </td><td>Method Not Allowed - Request method (GET, POST etc.) is not allowed on the requested endpoint</td><tr> <tr><td>500 </td><td>Internal Server Error - API is not working as expected. The request is probably valid but needs to be requested again later.</td><tr> <tr><td>503</td><td>Service Unavailable - The API endpoint is down. </td><tr> </table>"
  -
    "name": "User"
    "description": "The User APIs allows to generate access token (sessionid) using the client’s Login credentials. Additionally, user API, has calls for knowing User profile and fund balance summary."
  -
    "name": "Order"
    "description": "This section provided to information of API calls to do the order management i.e. place fresh order, modify or cancel already submitted valid orders. Retrieve the order and trade book.<br> Using Order API, various type of orders Intraday, Delivery, Bracket Order, Cover order, etc. can be placed. Order type here is used as Product Type in System. Kindly refer to the respective API call for more detail. <br /><br /><font size=3><b>Global Constants</b></font><br />Here are some of the constants enum values used for placing order.<br /> <table> <tr><td width=30%><b>Params</b></td><td width=30%><b>Values</b></td><td width=40%><b>Description</b></td></tr> <tr><td>product_type</td><td>INTRADAY</td><td>It consists of one leg only. Open orders will be squared off automatically before market close.</td></tr> <tr><td></td><td>DELIVERY</td><td>Order position will be carried over to next day under holding.</td></tr> <tr><td></td><td>BTST</td><td>Buy today sell tomorrow. It will be squared off automatically before next day market close.</td></tr> <tr><td></td><td>COVER</td><td>It consists of two legs. MAIN_LEG which is market order and SL_LEG which will be square off stop loss order of MAIN_LEG. Open orders will be squared off automatically before market close. </td></tr> <tr><td></td><td>BRACKET</td><td>It consists of three leg order. MAIN_LEG which is placed as Market or Limit, SL_LEG which is square off stop loss order and PROFIT_LEG which is square off order. <br> Open orders will be squared of automatically before market close. </td> </tr> <tr><td></td><td>MTF</td><td> Margin Trading or Margin Trading Facility (MTF) is a facility provided by brokers to their clients in which the client does not have to pay full amount for carrying overnight positions. </td></tr> <tr><td>order_type</td><td>RL</td><td>Regular limit order.</td></tr> <tr><td></td><td>RL-MKT</td><td>Regular market order.</td></tr> <tr><td></td><td>SL</td><td>Stoploss limit order.</td></tr> <tr><td></td><td>SL-MKT</td><td>Stoploss market order.</td></tr> <tr><td>validity</td><td>DAY</td><td>Order valid for the same day.</td></tr><tr><td></td><td>IOC</td><td>Order valid only for immediate execution else cancelled.</td></tr><tr><td></td><td>GTD</td><td>Order valid for specified number of days.</td></tr> <tr><td></td><td>GTC</td><td>Order valid until user cancels the order.</td></tr> <tr><td></td><td>EOS</td><td>Order valid for the specific session.</td></tr> <tr><td>order_status</td><td>PENDING</td><td>Order is pending or partially executed at exchange.</td></tr> <tr><td></td><td>EXECUTED</td><td>Order is fully executed at exchange.</td></tr> <tr><td></td><td>CANCELLED</td><td>Order is cancelled at exchange.</td></tr> <tr><td></td><td>OMS_XMITTED/ OMSXMITTED</td><td>Order is received by OMS but not submitted to exchange.</td></tr> <tr><td></td><td>OMS_REJECT/ OMSREJECT</td><td>Order is rejected by OMS.</td></tr> <tr><td></td><td>ORDER_ERROR/ ORDERERROR</td><td>Order is not valid, rejected by exchange.</td></tr> <tr><td></td><td>ADMIN_REJECT/ ADMINREJECT</td><td>Order is rejected by OMS Admin.</td></tr> <tr><td></td><td>EXCHANGE_XMITTED/ EXXMITTED</td><td>Order is submitted to exchange, but confirmation is not received.</td></tr> <tr><td></td><td>AMO_SUBMITTED/ AMOACCEPTED</td><td>AMO order is received by OMS.</td></tr> <tr><td></td><td>AMO_CANCELLED/ AMOWITHDRAWN</td><td>AMO order is cancelled. </td></tr> </table>"
  -
    "name": "Portfolio"
    "description": "This section provided to information of API calls to fetch open position and holding detail of user as uploaded by member in System."
  -
    "name": "Price Feed"
    "description": "<p id=\"pricefeedapi\">The Price Feed API allows to get price feed from broadcast server. <br/> <br/><strong><font size='4px'>Basic Flow to Implement the APIs:</font></strong><br/><br/> <b>STEP 1: </b>Make a Login API call using login credential to obtain the broadcast socket server endpoint and broadcast access token.<br/> <b>STEP 2:</b> Use broadcast access token in login request to broadcast server.<br/> <br/> <a href=\"https://synapsewave.com/api/ODINPRICEFEEDAPI/ \"><u>Click here</u></a> to know how to connect or <a target=\"_blank\" href=\"https://synapsewave.com/api/ODINPRICEFEEDAPI/Price-Feed-API.pdf \"><u>download</u></a> API documentation. </p>"
  -
    "name": "Real-time streaming messages"
    "description": "<p id=\"realtimestreamingmessages\">System provides real-time streaming data to receive order & trade responses. This feature is exposed via socket.io. You need to use the standard socket.io library (for more information, kindly refer https://socket.io/). <br/> <br/>This streaming feature is only meant for receiving real-time “Order & Trade responses”. All other features (order placement, order modification, portfolio details, etc.) need to be implemented using their respective APIs covered in the previous sections. <br/> <br/>To use this feature, a client needs to establish a socket connection with the streaming server and subscribe to the events. Establishing the connectivity requires a couple of fields that are received in the Login API response (refer the User -> Login section to know how to login): <br/><b>&emsp; &emsp;  a. </b>\t“others”:”messageSocket” – Streaming server’s endpoint that is used in the Connect section below. <br/><b>&emsp; &emsp;  b. </b>\t“access_token” – A unique token that is issued to you for the purpose of authentication and is used in the Login section below. <br/> <br/>Given below are the detailed steps, with a sample NodeJS code, describing the various events and how to subscribe to these events: <br/> <br/><b> 1. Connect: </b> This step comprises of establishing the socket connection with the streaming server. <br/><i>&emsp; &emsp; const io = require(\"socket.io-client\"); \t\t\t// NPM package for socket.io  </i> <br/><i>&emsp; &emsp; let ioClient = io.connect(url, {transports:['websocket']}); \t// url will be received in the Login API response -> “others”:“messageSocket” </i> <br/> <br/><b> 2. Login: </b> Here, you need to get authenticated before subscribing to events from the streaming server. <br/><i>&emsp; &emsp; ioClient.on(\"connect\", () => { </i> <br/><i>&emsp; &emsp; let msgLogin = {“jToken”:\"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0b2tlbiIsImlhdCI6MTU5MzQ5.j80QyIeFOCJzNQk \"}; // jToken will be received in Login API response -> “access_token” </i> <br/><i>&emsp; &emsp; ioClient.emit('loginAPI', msgLogin); \t\t// the socket will get disconnected if the authentication check is unsuccessful </i> <br/>}) </i> <br/> <br/><b> 3. Order/ Trade response: </b> You need to subscribe to the MSG:DATA event to receive order & trade responses from the streaming server. <br/><i>&emsp; &emsp; ioClient.on(\"MSG:DATA\", (response) => {        </i> <br/><i>&emsp; &emsp; console.log(' Received response : ' +   JSON.stringify(response)) ; </i> <br/><i>&emsp; &emsp; }) </i> <br/> <br/>We have provided the order & trade response structures as well as sample responses after the Disconnect section below. It will help you understand the JSON response structure and the fields that are returned. <br/> <br/><b> 4. Disconnect: </b> You need to disconnect the socket to close the connection with the streaming server. Moreover, you also need to subscribe to the “disconnect” event in case the server disconnects the connection. <br/><i>&emsp; &emsp; ioClient.on(\"disconnect\", (err) => {         </i> <br/><i>&emsp; &emsp; console.log(\"Disconnected:  Error: \"+ err );       </i> <br/>  <i>&emsp; &emsp; }) </i> <br/> <br/>Note: To differentiate order and trade response, kindly refer \"MessageType\" in the response. For order response, the value will be \"ORD_NRML\" and for trade response, it will be \"TRD_MSG\". <br/> <br/> <br/><strong><font size='4px'>Order response structure: </font></strong><br/><table><tr><td width=30%><b>Parameter (Key)</b></td><td width=30%><b>Data Type</b></td><td width=40%><b>Description</b></td></tr><tr><td>AMOOrderID</td><td>String</td><td>Order id for AMO/ EqGTD orders otherwise blank</td></tr><tr><td>Buy_Sell</td><td>String</td><td>1 -> Buy <br/> 2 -> Sell</td></tr><tr><td>CP_ID</td><td>String</td><td></td></tr><tr><td>CliOrderNumber</td><td>Integer</td><td>Gateway/Client order number [System Generated]</td></tr><tr><td>DQ</td><td>Integer</td><td>Disclose quantity. Specifies the quantity that has to be disclosed to the market  e.g 2500</td></tr><tr><td>DQRemaining</td><td>Integer</td><td>Disclose quantity remaining</td></tr><tr><td>Days</td><td>String</td><td>Number of days</td></tr><tr><td>Exchange</td><td>String</td><td>Exchange for which order is to be placed</td></tr><tr><td>ExpiryDate</td><td>String</td><td>Expiry Date. Ddmmmyyyy e.g 24JUN2004. Applicable for Future and option segment only</td></tr><tr><td>GTDOrderStatus</td><td>Integer</td><td>GTDOrderStatus</td></tr><tr><td>InitiatedBy</td><td>String</td><td>Initiated from application</td></tr><tr><td>InitiatedByUserId</td><td>String</td><td>Initiated from user id</td></tr><tr><td>InstrumentName</td><td>String</td><td>Instrument name provided in security information. <br/> Valid values are given bellow <br/> Equity = blank <br/> Future Index = FUTIDX <br/> Interest Rate Future = FUTINT <br/> Future Stock = FUTSTK <br/> Option Index = OPTIDX <br/> Option Stock = OPTSTK <br/> MCX/NCDEX Futures = FUTCOM <br/> MCXSpot = COM <br/> NCDEXSpot = COMDTY <br/> NSE Currency Future = FUTCUR, FUTIRD, FUTIRT, OPTCUR <br/> NSE Currency Spot = INDEX, UNDCUR, UNDIRD, UNDIRT <br/></td></tr><tr><td>LastModifiedTime</td><td>Date Time</td><td>Time when order was confirmed</td></tr><tr><td>LegIndicator</td><td>String</td><td>Blank value</td></tr><tr><td>ManagerID</td><td>String</td><td>Manager Id</td></tr><tr><td>MarketType</td><td>Integer</td><td>Normal = 1 <br/> Auction = 2 <br/> PreOpen = 3</td></tr><tr><td>MessageSequenceNumber</td><td>String</td><td>Running Message Sequence Number. For order’s latest status always consider max sequence number.</td></tr><tr><td>MessageType</td><td>String</td><td>ORD_NRML</td></tr><tr><td>Misc</td><td>String</td><td>Values will be: SPO-LMT, SPO-MKT, PO-MKT, PO-LMT</td></tr><tr><td>ModifiedBy</td><td>String</td><td>Modified by application</td></tr><tr><td>ModifiedByUserId</td><td>String</td><td>Modified by user id</td></tr><tr><td>Option_Type</td><td>String</td><td>Option Type. Applicable for options only.</td></tr><tr><td>OrderEntryTime</td><td>Date Time</td><td>Date and Time will be in 24 Hour Format e.g.: 15Jun2019 15.25.15</td></tr><tr><td>OrderNumber</td><td>String</td><td>For order entry request must be 0. In case of Modification/Cancellation request, this needs to be filled before sending.</td></tr><tr><td>OrderOriginalQty</td><td>Integer</td><td>Total Quantity of an Order </td></tr><tr><td>OrderPrice</td><td>Integer</td><td>Specifies the price in paise at which the order is placed.</td></tr><tr><td>OrderStatus</td><td>Integer</td><td>Order Status</td></tr><tr><td>OrderType</td><td>Integer</td><td>Order Type</td></tr><tr><td>OrderValidity</td><td>String</td><td>Validity</td></tr><tr><td>PartCode</td><td>String</td><td>Participant ID</td></tr><tr><td>PendingQty</td><td>Integer</td><td>Pending quantity</td></tr><tr><td>ProCli</td><td>String</td><td>2 -> PRO <br/>1 -> Client</td></tr><tr><td>Product</td><td>String</td><td>ProductType of the order</td></tr><tr><td>Reason</td><td>String</td><td>Rejection Reason</td></tr><tr><td>ScripCode</td><td>String</td><td>Scrip Code</td></tr><tr><td>Series</td><td>String</td><td>Exchange provided Security Series</td></tr><tr><td>SpreadFlag</td><td>Integer</td><td>Normal order = 0 <br/>Spread order = 1</td></tr><tr><td>SpreadPrice</td><td>Integer</td><td>Spread Price</td></tr><tr><td>StrikePrice</td><td>Integer</td><td>Exchange provided Strike price (in multiples of 100). Applicable only for options.</td></tr><tr><td>Symbol</td><td>String</td><td>Exchange provided Security symbol</td></tr><tr><td>TradedQTY</td><td>String</td><td>Traded Quantity</td></tr><tr><td>TriggerPrice</td><td>Integer</td><td>Trigger Price at which Stop loss Order should be active in market. This field is applicable only for a Stop loss order.</td></tr><tr><td>UCC</td><td>String</td><td>Alias UCC Code</td></tr><tr><td>UniqueCode</td><td>String</td><td>Alphanumeric value with special characters</td></tr><tr><td>UserID</td><td>String</td><td>Exchange User ID</td></tr><tr><td>UserRemarks</td><td>String</td><td>User Remarks</td></tr></table><br/><strong><font size='4px'>Order response sample: </font></strong><br/> <br/>&emsp; &emsp; { <br/>&emsp; &emsp; &emsp; &emsp; \"AMOOrderID\":\"\", <br/>&emsp; &emsp; &emsp; &emsp; \"Buy_Sell\":\"1\", <br/>&emsp; &emsp; &emsp; &emsp; \"CP_ID\":\"\", <br/>&emsp; &emsp; &emsp; &emsp; \"CliOrderNumber\":3, <br/>&emsp; &emsp; &emsp; &emsp; \"DQ\":0, <br/>&emsp; &emsp; &emsp; &emsp; \"DQRemaining\":0, <br/>&emsp; &emsp; &emsp; &emsp; \"Days\":\"0\", <br/>&emsp; &emsp; &emsp; &emsp; \"Exchange\":\"2\", <br/>&emsp; &emsp; &emsp; &emsp; \"ExpiryDate\":\"30Jun2022\", <br/>&emsp; &emsp; &emsp; &emsp; \"GTDOrderStatus\":0, <br/>&emsp; &emsp; &emsp; &emsp; \"InitiatedBy\":\"WAVE_MOBILE\", <br/>&emsp; &emsp; &emsp; &emsp; \"InitiatedByUserId\":\"DEMO31\", <br/>&emsp; &emsp; &emsp; &emsp; \"InstrumentName\":\"FUTIDX\", <br/>&emsp; &emsp; &emsp; &emsp; \"LastModifiedTime\":\"14-Jun-2022 11.54.30\", <br/>&emsp; &emsp; &emsp; &emsp; \"LegIndicator\":\"\", <br/>&emsp; &emsp; &emsp; &emsp; \"ManagerID\":\"6\", <br/>&emsp; &emsp; &emsp; &emsp; \"MarketType\":1, <br/>&emsp; &emsp; &emsp; &emsp; \"MessageSequenceNumber\":\"10221640000017828\", <br/>&emsp; &emsp; &emsp; &emsp; \"MessageType\":\"ORD_NRML\", <br/>&emsp; &emsp; &emsp; &emsp; \"Misc\":\"\", <br/>&emsp; &emsp; &emsp; &emsp; \"ModifiedBy\":\"WAVE_MOBILE\", <br/>&emsp; &emsp; &emsp; &emsp; \"ModifiedByUserId\":\"DEMO31\", <br/>&emsp; &emsp; &emsp; &emsp; \"Option_Type\":\"XX\", <br/>&emsp; &emsp; &emsp; &emsp; \"OrderEntryTime\":\"14-Jun-2022 11.54.30\", <br/>&emsp; &emsp; &emsp; &emsp; \"OrderNumber\":\"1000000000004051\", <br/>&emsp; &emsp; &emsp; &emsp; \"OrderOriginalQty\":50, <br/>&emsp; &emsp; &emsp; &emsp; \"OrderPrice\":1583890, <br/>&emsp; &emsp; &emsp; &emsp; \"OrderStatus\":5, <br/>&emsp; &emsp; &emsp; &emsp; \"OrderType\":1, <br/>&emsp; &emsp; &emsp; &emsp; \"OrderValidity\":\"1\", <br/>&emsp; &emsp; &emsp; &emsp; \"PartCode\":\"FTIL\", <br/>&emsp; &emsp; &emsp; &emsp; \"PendingQty\":50, <br/>&emsp; &emsp; &emsp; &emsp; \"ProCli\":\"1\", <br/>&emsp; &emsp; &emsp; &emsp; \"Product\":\"M\", <br/>&emsp; &emsp; &emsp; &emsp; \"Reason\":\"\", <br/>&emsp; &emsp; &emsp; &emsp; \"ScripCode\":\"56734\", <br/>&emsp; &emsp; &emsp; &emsp; \"Series\":\"XX\", <br/>&emsp; &emsp; &emsp; &emsp; \"SpreadFlag\":0, <br/>&emsp; &emsp; &emsp; &emsp; \"SpreadPrice\":0, <br/>&emsp; &emsp; &emsp; &emsp; \"StrikePrice\":-1, <br/>&emsp; &emsp; &emsp; &emsp; \"Symbol\":\"NIFTY\", <br/>&emsp; &emsp; &emsp; &emsp; \"TradedQTY\":\"0\", <br/>&emsp; &emsp; &emsp; &emsp; \"TriggerPrice\":0, <br/>&emsp; &emsp; &emsp; &emsp; \"UCC\":\"DEMO31\", <br/>&emsp; &emsp; &emsp; &emsp; \"UniqueCode\":\"NXWAD00003>6\", <br/>&emsp; &emsp; &emsp; &emsp; \"UserID\":\"46016\", <br/>&emsp; &emsp; &emsp; &emsp; \"UserRemarks\":\"1339674869\" <br/>&emsp; &emsp; } <br/> <br/> <br/><strong><font size='4px'>Trade response structure: </font></strong><br/><table><tr><td width=30%><b>Parameter (Key)</b></td><td width=30%><b>Data Type</b></td><td width=40%><b>Description</b></td></tr><tr><td>Buy_Sell</td><td>String</td><td>1 -> Buy <br/> 2 -> Sell</td></tr><tr><td>CP_ID</td><td>String</td><td></td></tr><tr><td>CliOrderNumber</td><td>Integer</td><td>Gateway/Client order number [System Generated]</td></tr><tr><td>DQ</td><td>String</td><td>Disclose quantity. Specifies the quantity that has to be disclosed to the market  e.g 2500</td></tr><tr><td>DQRemaining</td><td>String</td><td>Disclose quantity remaining</td></tr><tr><td>Days</td><td>Integer</td><td>Number of days</td></tr><tr><td>Exchange</td><td>Integer</td><td>Exchange</td></tr><tr><td>ExpiryDate</td><td>String</td><td>Expiry Date. Ddmmmyyyy e.g 24JUN2004. Applicable for Future and option segment only</td></tr><tr><td>InitiatedBy</td><td>String</td><td>Initiated from application</td></tr><tr><td>InitiatedByUserId</td><td>String</td><td>Initiated from user id</td></tr><tr><td>InstrumentName</td><td>String</td><td>Instrument name provided in security information. <br/> Valid values are given bellow <br/> Equity = blank <br/> Future Index = FUTIDX <br/> Interest Rate Future = FUTINT <br/> Future Stock = FUTSTK <br/> Option Index = OPTIDX <br/> Option Stock = OPTSTK <br/> MCX/NCDEX Futures = FUTCOM <br/> MCXSpot = COM <br/> NCDEXSpot = COMDTY <br/> NSE Currency Future = FUTCUR, FUTIRD, FUTIRT, OPTCUR <br/> NSE Currency Spot = INDEX, UNDCUR, UNDIRD, UNDIRT <br/></td></tr><tr><td>LegIndicator</td><td>String</td><td>Blank value</td></tr><tr><td>ManagerID</td><td>Integer</td><td>Manager Id</td></tr><tr><td>MessageSequenceNumber</td><td>Integer</td><td>Running Message Sequence Number</td></tr><tr><td>MessageType</td><td>String</td><td>TRD_MSG</td></tr><tr><td>Misc</td><td>String</td><td>Values will be: SPO-LMT, SPO-MKT, PO-MKT, PO-LMT</td></tr><tr><td>ModifiedBy</td><td>String</td><td>Modified by application</td></tr><tr><td>ModifiedByUserId</td><td>String</td><td>Modified by user id</td></tr><tr><td>Option_Type</td><td>String</td><td>Option Type. Applicable for options only.</td></tr><tr><td>OrderLastModifiedTime</td><td>Date Time</td><td>Time when order was confirmed. Date and Time will be in 24 Hour Format e.g.: 15Jun2019 15.25.15</td></tr><tr><td>OrderNumber</td><td>String</td><td>For order entry request must be 0. In case of Modification/Cancellation request, this needs to be filled before sending.</td></tr><tr><td>OrderOriginalQty</td><td>Integer</td><td>Total Quantity of an Order </td></tr><tr><td>OrderPrice</td><td>Integer</td><td>Order Price (Fresh order/ Modified order) in paisa</td></tr><tr><td>OrderTime</td><td>Date Time</td><td>Date and Time will be 24 Hour format like: 15Jun2019 15.25.15</td></tr><tr><td>OrderType</td><td>Integer</td><td>Order Type</td></tr><tr><td>PartCode</td><td>String</td><td>Participant ID</td></tr><tr><td>PendingQty</td><td>String</td><td>Pending quantity</td></tr><tr><td>ProCli</td><td>String</td><td>2 -> PRO <br/>1 -> Client</td></tr><tr><td>Product</td><td>String</td><td>ProductType of the order</td></tr><tr><td>QuantityTradedToday</td><td>Integer</td><td>Total no. of quantity traded inclusive of the current trade quantity</td></tr><tr><td>ScripCode</td><td>Integer</td><td>Scrip Code</td></tr><tr><td>Series</td><td>String</td><td>Exchange provided Security Series</td></tr><tr><td>SpreadFlag</td><td>Integer</td><td>Normal order = 0 <br/>Spread order = 1</td></tr><tr><td>SpreadPrice</td><td>Integer</td><td>Spread Price</td></tr><tr><td>StrikePrice</td><td>Integer</td><td>Exchange provided Strike price (in multiples of 100). Applicable only for options.</td></tr><tr><td>Symbol</td><td>String</td><td>Exchange provided Security symbol</td></tr><tr><td>TradeNumber</td><td>String</td><td>Trade no.</td></tr><tr><td>TradeQty</td><td>String</td><td>Traded Quantity</td></tr><tr><td>TradeTime</td><td>Date Time</td><td>Date and Time will be 24 Hour format like: 15Jun2019 15.25.15</td></tr><tr><td>TradedPrice</td><td>String</td><td>Trade price in paisa. e.g. 45065 (in multiples of 100)</td></tr><tr><td>UCC</td><td>String</td><td>Alias UCC Code</td></tr><tr><td>UniqueCode</td><td>String</td><td>Alphanumeric value with special characters</td></tr><tr><td>UserID</td><td>String</td><td>Exchange User ID</td></tr><tr><td>UserRemarks</td><td>String</td><td>User Remarks</td></tr></table><br/><strong><font size='4px'>Trade response sample: </font></strong><br/> <br/>&emsp; &emsp; { <br/>&emsp; &emsp; &emsp; &emsp; \"Buy_Sell\":\"2\", <br/>&emsp; &emsp; &emsp; &emsp; \"CP_ID\":\"\", <br/>&emsp; &emsp; &emsp; &emsp; \"CliOrderNumber\":11, <br/>&emsp; &emsp; &emsp; &emsp; \"DQ\":\"0\", <br/>&emsp; &emsp; &emsp; &emsp; \"DQRemaining\":\"0\", <br/>&emsp; &emsp; &emsp; &emsp; \"Days\":0, <br/>&emsp; &emsp; &emsp; &emsp; \"Exchange\":1, <br/>&emsp; &emsp; &emsp; &emsp; \"ExpiryDate\":\"\", <br/>&emsp; &emsp; &emsp; &emsp; \"InitiatedBy\":\"WAVE_MOBILE\", <br/>&emsp; &emsp; &emsp; &emsp; \"InitiatedByUserId\":\"DEMO31\", <br/>&emsp; &emsp; &emsp; &emsp; \"InstrumentName\":\"\", <br/>&emsp; &emsp; &emsp; &emsp; \"LegIndicator\":\"\", <br/>&emsp; &emsp; &emsp; &emsp; \"ManagerID\":6, <br/>&emsp; &emsp; &emsp; &emsp; \"MessageSequenceNumber\":10221640000024290, <br/>&emsp; &emsp; &emsp; &emsp; \"MessageType\":\"TRD_MSG\", <br/>&emsp; &emsp; &emsp; &emsp; \"Misc\":\"\", <br/>&emsp; &emsp; &emsp; &emsp; \"ModifiedBy\":\"WAVE_MOBILE\", <br/>&emsp; &emsp; &emsp; &emsp; \"ModifiedByUserId\":\"DEMO31\", <br/>&emsp; &emsp; &emsp; &emsp; \"Option_Type\":\"\", <br/>&emsp; &emsp; &emsp; &emsp; \"OrderLastModifiedTime\":\"14-Jun-2022 14.03.58\", <br/>&emsp; &emsp; &emsp; &emsp; \"OrderNumber\":\"1100000000085242\", <br/>&emsp; &emsp; &emsp; &emsp; \"OrderOriginalQty\":1, <br/>&emsp; &emsp; &emsp; &emsp; \"OrderPrice\":146000, <br/>&emsp; &emsp; &emsp; &emsp; \"OrderTime\":\"14-Jun-2022 14.03.58\", <br/>&emsp; &emsp; &emsp; &emsp; \"OrderType\":1, <br/>&emsp; &emsp; &emsp; &emsp; \"PartCode\":\"FTIL\", <br/>&emsp; &emsp; &emsp; &emsp; \"PendingQty\":\"0\", <br/>&emsp; &emsp; &emsp; &emsp; \"ProCli\":\"1\", <br/>&emsp; &emsp; &emsp; &emsp; \"Product\":\"M\", <br/>&emsp; &emsp; &emsp; &emsp; \"QuantityTradedToday\":1, <br/>&emsp; &emsp; &emsp; &emsp; \"ScripCode\":1594, <br/>&emsp; &emsp; &emsp; &emsp; \"Series\":\"EQ\", <br/>&emsp; &emsp; &emsp; &emsp; \"SpreadFlag\":0, <br/>&emsp; &emsp; &emsp; &emsp; \"SpreadPrice\":0, <br/>&emsp; &emsp; &emsp; &emsp; \"StrikePrice\":0, <br/>&emsp; &emsp; &emsp; &emsp; \"Symbol\":\"INFY\", <br/>&emsp; &emsp; &emsp; &emsp; \"TradeNumber\":\"50024851\", <br/>&emsp; &emsp; &emsp; &emsp; \"TradeQty\":\"1\", <br/>&emsp; &emsp; &emsp; &emsp; \"TradeTime\":\"14-Jun-2022 14.03.58\", <br/>&emsp; &emsp; &emsp; &emsp; \"TradedPrice\":\"146000\", <br/>&emsp; &emsp; &emsp; &emsp; \"UCC\":\"DEMO31\", <br/>&emsp; &emsp; &emsp; &emsp; \"UniqueCode\":\"NXWAD00011>6\", <br/>&emsp; &emsp; &emsp; &emsp; \"UserID\":\"37652\", <br/>&emsp; &emsp; &emsp; &emsp; \"UserRemarks\":\"1339682638\" <br/>&emsp; &emsp; } <br/></p>"
"paths":
  "/authentication/v1/user/session":
    "post":
      "summary": "Login"
      "description": "This API needs to be used for signing-in to the application using login credentials. A successful sign-in would return an ‘access token’ and a 'broadcast_access_token' in the response. <br />'access_token' needs to be included in all subsequent API invocations as part of http header 'Authorization' token. <br />'broadcast_access_token' would be required for establishing a connection with the feed endpoint ('broadCastSocket' received in the response). Kindly refer <a href=\"#pricefeedapi\"><u>Price Feed API</u></a> for further details.\n<table><tbody><tr><td><b>login_type</b></td><td><b>password</b></td><td><b>second_auth_type</b></td><td><b>second_auth</b></td></tr> <tr><td>PASSWORD</td><td>password</td><td>REGISTER</td><td>Not Required</td></tr> <tr><td>TOKEN</td><td>register_token</td><td>OTP/TOTP/FINGERPRINT</td><td>OTP value/TOTP value/Registered UDID</td></tr> <tr><td>PASSWORD</td><td>password</td><td>OTP/TOTP/FINGERPRINT</td><td>OTP value/TOTP value/Registered UDID</td></tr> <tr><td>MPIN</td><td>MPIN Registered</td><td>OTP/TOTP/FINGERPRINT</td><td>OTP value/TOTP value/Registered UDID</td></tr> </tbody></table>\nTo get second factor authentication details of user, \"REGISTER\" can be used in second_auth_type field, which validates password field and return register_token that can be used as \"TOKEN\" login type with second factor after registration."
      "tags":
        - "User"
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "properties":
                "user_id":
                  "type": "string"
                  "description": "User Id to be in CAPITALISED only"
                  "example": "TEST1"
                "login_type":
                  "type": "string"
                  "description": "Login type, whether user is login with password, MPIN or fingerprint and respectively need to pass value in password field."
                  "default": "PASSWORD"
                  "enum":
                    - "PASSWORD"
                    - "MPIN"
                    - "FINGERPRINT"
                "password":
                  "type": "string"
                  "description": "Password/MPIN/Fingerprint to validate"
                "second_auth_type":
                  "type": "string"
                  "description": "Second factor authentication type, and need to pass value in second_auth field."
                  "enum":
                    - "OTP"
                    - "TOTP"
                    - "FINGERPRINT"
                    - "REGISTER"
                "second_auth":
                  "type": "string"
                  "description": "Two factor authentication credentials"
                "api_key":
                  "type": "string"
                  "description": "API key provided during subscription"
                  "example": "aasdszzzzz11"
                "source":
                  "type": "string"
                  "description": "Login source of user"
                  "enum":
                    - "WEBAPI"
                    - "MOBILEAPI"
              "required":
                - "user_id"
                - "password"
                - "second_auth"
                - "api_key"
                - "source"
            "example":
              "user_id": "TEST1"
              "login_type": "PASSWORD"
              "password": "Xyz@123"
              "second_auth_type": "TOTP"
              "second_auth": "222396"
              "api_key": "aasdszzzzz11"
              "source": "WEBAPI"
      "responses":
        "200":
          "description": "User logged in successfully"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "default": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                  "message":
                    "type": "string"
                    "description": "Success message"
                  "data":
                    "type": "object"
                    "description": "User Login Response"
                    "properties":
                      "access_token":
                        "type": "string"
                        "description": "The authentication token that is to be used with every subsequent request"
                      "broadcast_access_token":
                        "type": "string"
                        "description": "The authentication token that is to be used while connencting broadcast server. <a href=\"https://synapsewave.com/api/ODINPRICEFEEDAPI/ \"><u>Click here</u></a> to know how to connect."
                      "user_name":
                        "type": "string"
                        "description": "User's name"
                      "login_time":
                        "type": "string"
                        "description": "User's last login time"
                      "exchanges":
                        "type": "array"
                        "description": "Exchanges allowed to user to trade"
                        "items":
                          "type": "string"
                      "bcastExchanges":
                        "type": "array"
                        "description": "Exchanges allowed to user to view broadcast"
                        "items":
                          "type": "string"
                      "product_types":
                        "type": "array"
                        "description": "Product types allowed to user"
                        "items":
                          "type": "string"
                      "product_types_exchange":
                        "type": "object"
                        "description": "Product types allowed to user exchange segment wise"
                      "mpin_enabled":
                        "type": "boolean"
                        "description": "User's has registered MPIN or not"
                      "fingerprint_enabled":
                        "type": "boolean"
                        "description": "User's has registered fingerprint or not"
                      "others":
                        "type": "object"
                        "description": "Other fields relevant to user"
                        "properties":
                          "groupId":
                            "type": "string"
                            "description": "User's branch id"
                          "broadCastSocket":
                            "type": "string"
                            "description": "Broadcast server endpoint. <a href=\"https://synapsewave.com/api/ODINPRICEFEEDAPI/ \"><u>Click here</u></a> to know how to connect."
                          "messageSocket":
                            "type": "string"
                            "description": "Message server endpoint"
                          "POA":
                            "type": "string"
                            "description": "User's POA status"
                          "participantCode":
                            "type": "string"
                            "description": "Participant code mapped for equities"
                          "dervParticipantCode":
                            "type": "string"
                            "description": "Participant code mapped for derivatives"
              "example":
                "status": "success"
                "code": "s-101"
                "message": "Success message"
                "data":
                  "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0b2tlbiIsImlhdCI6MTU4MjUzOTM4NiwibWVtYmVySWQiOjkwOTA"
                  "broadcast_access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0b2tlbiIsImlhdCI6MTYyMzk4MTAyNSwibWVtYmVySWQiO"
                  "user_name": "Rest Client"
                  "login_time": "2020-03-10 10:10:10"
                  "exchanges":
                    - "NSE_EQ"
                    - "BSE_EQ"
                    - "NSE_FO"
                  "bcastExchanges":
                    - "NSE_EQ"
                    - "BSE_EQ"
                    - "NSE_FO"
                    - "BSE_FO"
                  "product_types":
                    - "INTRADAY"
                    - "DELIVERY"
                    - "PTST"
                    - "COVER"
                    - "BRACKET"
                  "product_types_exchange":
                    "NSE_EQ":
                      - "INTRADAY"
                      - "DELIVERY"
                      - "PTST"
                      - "COVER"
                      - "BRACKET"
                    "BSE_EQ":
                      - "INTRADAY"
                      - "DELIVERY"
                      - "COVER"
                    "NSE_FO":
                      - "INTRADAY"
                      - "DELIVERY"
                      - "COVER"
                      - "BRACKET"
                  "mpin_enabled": true
                  "fingerprint_enabled": true
                  "others":
                    "groupId": "HO"
                    "broadCastSocket": "wss://broadcast.server.com:4509"
                    "messageSocket": "wss://socketio.server.com:4512"
                    "POA": "0"
                    "participantCode": ""
                    "dervParticipantCode": ""
        "400":
          "description": "The specified resource was not found"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
    "delete":
      "summary": "Logout"
      "description": "The Logout call terminal session with Gateway. Thus, API session is destroyed."
      "tags":
        - "User"
      "responses":
        "200":
          "description": "Successfully logout"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "default": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                  "message":
                    "type": "string"
                    "description": "Success message"
              "example":
                "status": "success"
                "code": "s-101"
                "message": "Success message"
        "400":
          "description": "The specified resource was not found"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
    "put":
      "tags":
        - "User"
      "summary": "Validate Session"
      "description": "This call would validate the access token."
      "requestBody":
        "content": {}
      "parameters":
        -
          "name": "Authorization"
          "in": "header"
          "schema":
            "type": "string"
          "example": "{{access_token}}"
      "responses":
        "200":
          "description": "OK"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Status of API call"
                    "default": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                  "message":
                    "type": "string"
                    "description": "Success message"
              "example":
                "status": "success"
                "code": "s-101"
                "message": "Session verified."
                "data": "{\"status\":\"false\",\"message\":\"TRUE\",\"dropped\":\"true\"}"
  "/authentication/v1/user/balance":
    "get":
      "summary": "Balance"
      "description": "This API can be used to retrieve the latest balance with broker for allowed segments."
      "tags":
        - "User"
      "responses":
        "200":
          "description": "User balance fetched successfully"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "default": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                    "example": "s-101"
                  "message":
                    "type": "string"
                    "description": "Success message"
                    "example": "Success message"
                  "data":
                    "type": "object"
                    "properties":
                      "equity":
                        "type": "object"
                        "properties":
                          "id":
                            "type": "string"
                            "description": "Identification of balance type."
                            "example": 1
                          "name":
                            "type": "string"
                            "description": "Display name of balance type."
                            "example": "Equities"
                          "net_available":
                            "type": "number"
                            "description": "Net available balance."
                            "example": 24966.45
                          "total_available":
                            "type": "number"
                            "description": "Total Trading Power Limit."
                            "example": 24966.45
                          "total_utilised":
                            "type": "number"
                            "description": "Total utilised balance."
                            "example": 2496
                          "total_withdrawable":
                            "type": "number"
                            "description": "Total withdrawable balance."
                            "example": 22006
                          "net_payin_payout":
                            "type": "number"
                            "description": "Cumulative funds transferred today."
                            "example": 21000
                          "available":
                            "type": "object"
                            "properties":
                              "cash":
                                "type": "number"
                                "description": "Cash balance available."
                                "example": 21000
                              "collateral":
                                "type": "number"
                                "description": "Collateral balance available."
                                "example": 0
                              "credit_for_sale":
                                "type": "number"
                                "description": "Credit of sale balance available."
                                "example": 0
                              "option_credit_for_sale":
                                "type": "number"
                                "description": "Options credit of sale balance available."
                                "example": 0
                          "utilised":
                            "type": "object"
                            "properties":
                              "limit":
                                "type": "number"
                                "description": "Limits utilised."
                                "example": 21000
                              "pnl_realised":
                                "type": "number"
                                "description": "Realised profit/loss."
                                "example": 0
                              "pnl_unrealised":
                                "type": "number"
                                "description": "Unrealised profit/loss."
                                "example": 0
                              "option_premium":
                                "type": "number"
                                "description": "Net premium."
                                "example": 0
                      "commodity":
                        "type": "object"
                        "properties":
                          "id":
                            "type": "string"
                            "description": "Identification of balance type."
                            "example": 1
                          "name":
                            "type": "string"
                            "description": "Display name of balance type."
                            "example": "Commodity"
                          "net_available":
                            "type": "number"
                            "description": "Net available balance."
                            "example": 24966.45
                          "total_available":
                            "type": "number"
                            "description": "Total balance."
                            "example": 24966.45
                          "total_utilised":
                            "type": "number"
                            "description": "Total utilised balance."
                            "example": 2496
                          "total_withdrawable":
                            "type": "number"
                            "description": "Total withdrawable balance."
                            "example": 22006
                          "net_payin_payout":
                            "type": "number"
                            "description": "Cummulative funds transferred today."
                            "example": 21000
                          "available":
                            "type": "object"
                            "properties":
                              "cash":
                                "type": "number"
                                "description": "Cash balance available."
                                "example": 21000
                              "collateral":
                                "type": "number"
                                "description": "Collateral balance available."
                                "example": 0
                              "credit_for_sale":
                                "type": "number"
                                "description": "Credit of sale balance available."
                                "example": 0
                              "option_credit_for_sale":
                                "type": "number"
                                "description": "Options credit of sale balance available."
                                "example": 0
                          "utilised":
                            "type": "object"
                            "properties":
                              "limit":
                                "type": "number"
                                "description": "Limits utilised."
                                "example": 21000
                              "pnl_realised":
                                "type": "number"
                                "description": "Realised profit/loss."
                                "example": 0
                              "pnl_unrealised":
                                "type": "number"
                                "description": "Unrealised profit/loss."
                                "example": 0
                              "option_premium":
                                "type": "number"
                                "description": "Net premium."
                                "example": 0
                      "currency":
                        "type": "object"
                        "properties":
                          "id":
                            "type": "string"
                            "description": "Identification of balance type."
                            "example": 1
                          "name":
                            "type": "string"
                            "description": "Display name of balance type."
                            "example": "Currency"
                          "net_available":
                            "type": "number"
                            "description": "Net available balance."
                            "example": 24966.45
                          "total_available":
                            "type": "number"
                            "description": "Total Trading Power Limit."
                            "example": 24966.45
                          "total_utilised":
                            "type": "number"
                            "description": "Total utilised balance."
                            "example": 2496
                          "total_withdrawable":
                            "type": "number"
                            "description": "Total withdrawable balance."
                            "example": 22006
                          "net_payin_payout":
                            "type": "number"
                            "description": "Cumulative funds transferred today."
                            "example": 21000
                          "available":
                            "type": "object"
                            "properties":
                              "cash":
                                "type": "number"
                                "description": "Cash balance available."
                                "example": 21000
                              "collateral":
                                "type": "number"
                                "description": "Collateral balance available."
                                "example": 0
                              "credit_for_sale":
                                "type": "number"
                                "description": "Credit of sale balance available."
                                "example": 0
                              "option_credit_for_sale":
                                "type": "number"
                                "description": "Options credit of sale balance available."
                                "example": 0
                          "utilised":
                            "type": "object"
                            "properties":
                              "limit":
                                "type": "number"
                                "description": "Limits utilised."
                                "example": 21000
                              "pnl_realised":
                                "type": "number"
                                "description": "Realised profit/loss."
                                "example": 0
                              "pnl_unrealised":
                                "type": "number"
                                "description": "Unrealised profit/loss."
                                "example": 0
                              "option_premium":
                                "type": "number"
                                "description": "Net premium."
                                "example": 0
        "400":
          "description": "The specified resource was not found"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
  "/transactional/v1/orders/regular":
    "post":
      "summary": "Place Order"
      "description": "The Place order API lets you place a new order."
      "tags":
        - "Order"
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "properties":
                "scrip_info":
                  "type": "object"
                  "description": "Scrip information can be sent in 2 ways. either by sending exchange and scrip token or by sending scrip details i.e. exchange, symbol, series, expiry, strike price & option type."
                  "properties":
                    "exchange":
                      "type": "string"
                      "enum":
                        - "NSE_EQ"
                        - "NSE_FO"
                        - "BSE_EQ"
                        - "BSE_FO"
                        - "MCX_FO"
                        - "NCDEX_FO"
                        - "NSE_CUR"
                        - "NSE_COMM"
                        - "BSE_CUR"
                        - "BSE_COMM"
                        - "ICEX_FO"
                        - "MSE_EQ"
                        - "MSE_FO"
                        - "MSE_CUR"
                        - "NSE_OTS"
                      "description": "Exchange segment."
                    "scrip_token":
                      "type": "integer"
                      "description": "Exchange token number of the scrip or instrument."
                    "symbol":
                      "type": "string"
                      "description": "Symbol."
                    "series":
                      "type": "string"
                      "description": "Series, Applicable for equity instruments."
                    "expiry_date":
                      "type": "string"
                      "description": "Expiry date. date format is yyyy-mm-dd. Applicable for future & options."
                    "strike_price":
                      "type": "number"
                      "description": "Strike price. Applicable for options."
                    "option_type":
                      "type": "string"
                      "enum":
                        - "CE"
                        - "PE"
                      "description": "Option type. Applicable for options."
                  "required":
                    - "exchange"
                "transaction_type":
                  "type": "string"
                  "description": "Order is BUY or SELL."
                "product_type":
                  "type": "string"
                  "description": "Product type of the order."
                "order_type":
                  "type": "string"
                  "description": "Type of order."
                "quantity":
                  "type": "integer"
                  "description": "Number of quantity to transact."
                "price":
                  "type": "number"
                  "default": 0
                  "description": "Price at which order will be placed"
                "trigger_price":
                  "type": "number"
                  "description": "Price at which order will be triggered applicable for Order Type as Stop Loss Limit or Stop Loss Market."
                "disclosed_quantity":
                  "type": "integer"
                  "description": "Number of quantity to be disclosed to the market."
                "validity":
                  "type": "string"
                  "default": "DAY"
                  "description": "Order validity"
                "validity_days":
                  "type": "integer"
                  "description": "Number of days order needs to be carried ahead for validity GTD orders."
                "is_amo":
                  "type": "boolean"
                  "default": false
                  "description": "Whether order is an AMO order or not?"
                "order_identifier":
                  "type": "string"
                  "maxLength": 8
                  "description": "An optional field to apply to an order to track it."
                "part_code":
                  "type": "string"
                  "description": "Participant code"
                "algo_id":
                  "type": "string"
                  "description": "Algo id for strategry generated orders"
                "strategy_id":
                  "type": "string"
                  "description": "Strategy id for strategry generated orders"
                "vender_code":
                  "type": "string"
                  "description": "Vender code for inhouse application"
              "required":
                - "scrip_info"
                - "transaction_type"
                - "product_type"
                - "order_type"
                - "quantity"
              "example":
                "scrip_info":
                  "exchange": "NSE_EQ"
                  "scrip_token": 22
                  "symbol": null
                  "series": null
                  "expiry_date": null
                  "strike_price": null
                  "option_type": null
                "transaction_type": "BUY"
                "product_type": "DELIVERY"
                "order_type": "RL"
                "quantity": 50
                "price": 100
                "trigger_price": 0
                "disclosed_quantity": 25
                "validity": "DAY"
                "is_amo": false
                "order_identifier": "108108108"
      "responses":
        "200":
          "description": "Order placed successfully"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Response for request"
                    "default": "success"
                    "example": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                    "example": "s-101"
                  "message":
                    "type": "string"
                    "description": "Success Message"
                    "example": "Success Message"
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
  "/transactional/v1/orders/regular/{exchange}/{order_id}":
    "put":
      "summary": "Modify Order"
      "description": "The Modify  order API lets you modify a pending  order."
      "tags":
        - "Order"
      "parameters":
        -
          "in": "path"
          "name": "exchange"
          "schema":
            "type": "string"
          "required": true
          "description": "Exchange segment"
        -
          "in": "path"
          "name": "order_id"
          "schema":
            "type": "string"
          "required": true
          "description": "Order id. It must be URL encoded as it contains special characters."
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "properties":
                "order_type":
                  "type": "string"
                  "description": "Type of order."
                "quantity":
                  "type": "integer"
                  "description": "Number of quantity to transact."
                "traded_quantity":
                  "type": "integer"
                  "description": "Cumulative traded quantity of the order. Data to be passed in this field is available in order book response."
                "price":
                  "type": "number"
                  "default": 0
                  "description": "Price at which order will be placed"
                "trigger_price":
                  "type": "number"
                  "description": "Price at which order will be triggered applicable for Order Type as Stop Loss Limit or Stop Loss Market."
                "disclosed_quantity":
                  "type": "integer"
                  "description": "Number of quantity to be disclosed to the market."
                "validity":
                  "type": "string"
                  "default": "DAY"
                  "description": "Order validity"
                "validity_days":
                  "type": "integer"
                  "description": "Number of days order needs to be carried ahead for validity GTD orders."
              "required":
                - "order_type"
                - "quantity"
                - "traded_quantity"
              "example":
                "order_type": "RL"
                "quantity": 50
                "traded_quantity": 50
                "price": 0
                "trigger_price": 0
                "disclosed_quantity": 25
                "validity": "DAY"
      "responses":
        "200":
          "description": "order modified successfully."
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Response for request"
                    "default": "success"
                    "example": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                    "example": "s-101"
                  "message":
                    "type": "string"
                    "description": "Success Message"
                    "example": "Success Message"
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
    "delete":
      "summary": "Cancel Order"
      "description": "The Cancel order API lets you cancel a pending order."
      "tags":
        - "Order"
      "parameters":
        -
          "in": "path"
          "name": "exchange"
          "schema":
            "type": "string"
          "required": true
          "description": "Exchange segment"
        -
          "in": "path"
          "name": "order_id"
          "schema":
            "type": "string"
          "required": true
          "description": "Order id. It must be URL encoded as it contains special characters."
      "responses":
        "200":
          "description": "Order cancelled successfully."
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Response for request"
                    "default": "success"
                    "example": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                    "example": "s-101"
                  "message":
                    "type": "string"
                    "description": "Success Message"
                    "example": "Success Message"
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
  "/transactional/v1/orders/cover":
    "post":
      "summary": "Place Cover Order"
      "description": "A cover order is a two-legged order. First leg is market order and second leg is stop loss order."
      "tags":
        - "Order"
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "properties":
                "scrip_info":
                  "type": "object"
                  "description": "Scrip information can be sent in 2 ways. either by sending exchange and scrip token or by sending scrip details i.e. exchange, symbol, series, expiry, strike price & option type."
                  "properties":
                    "exchange":
                      "type": "string"
                      "enum":
                        - "NSE_EQ"
                        - "NSE_FO"
                        - "BSE_EQ"
                        - "BSE_FO"
                        - "MCX_FO"
                        - "NCDEX_FO"
                        - "NSE_CUR"
                        - "NSE_COMM"
                        - "BSE_CUR"
                        - "BSE_COMM"
                        - "ICEX_FO"
                        - "MSE_EQ"
                        - "MSE_FO"
                        - "MSE_CUR"
                        - "NSE_OTS"
                      "description": "Exchange segment."
                    "scrip_token":
                      "type": "integer"
                      "description": "Exchange token number of the scrip or instrument."
                    "symbol":
                      "type": "string"
                      "description": "Symbol."
                    "series":
                      "type": "string"
                      "description": "Series, Applicable for equity instruments."
                    "expiry_date":
                      "type": "string"
                      "description": "Expiry date. date format is yyyy-mm-dd. Applicable for future & options."
                    "strike_price":
                      "type": "number"
                      "description": "Strike price. Applicable for options."
                    "option_type":
                      "type": "string"
                      "enum":
                        - "CE"
                        - "PE"
                      "description": "Option type. Applicable for options."
                  "required":
                    - "exchange"
                "transaction_type":
                  "type": "string"
                  "description": "Order is BUY or SELL."
                "main_leg":
                  "type": "object"
                  "properties":
                    "order_type":
                      "type": "string"
                      "description": "Type of order. Only RL-MKT is supported."
                    "quantity":
                      "type": "integer"
                      "description": "Number of quantity to transact."
                    "price":
                      "type": "number"
                      "default": 0
                      "description": "Price at which main leg of cover order will be placed. It should be 0."
                  "required":
                    - "order_type"
                    - "quantity"
                "stoploss_leg":
                  "type": "object"
                  "properties":
                    "legs":
                      "type": "array"
                      "items":
                        "type": "object"
                        "properties":
                          "quantity":
                            "type": "integer"
                            "default": 0
                            "description": "Number of quantity to transact. Value will be ignored currently."
                          "price":
                            "type": "number"
                            "default": 0
                            "description": "Price at which stoploss order should be executed."
                          "trigger_price":
                            "type": "number"
                            "description": "Price at which stoploss order should be triggered."
                        "required":
                          - "trigger_price"
                "order_identifier":
                  "type": "string"
                  "maxLength": 8
                  "description": "An optional field to apply to an order to track it."
                "part_code":
                  "type": "string"
                  "description": "Participant code"
                "algo_id":
                  "type": "string"
                  "description": "Algo id for strategry generated orders"
                "strategy_id":
                  "type": "string"
                  "description": "Strategy id for strategry generated orders"
                "vender_Code":
                  "type": "string"
                  "description": "Vender code for inhouse application"
              "required":
                - "scrip_info"
                - "transaction_type"
              "example":
                "scrip_info":
                  "exchange": "NSE_EQ"
                  "scrip_token": 22
                  "symbol": null
                  "series": null
                  "expiry_date": null
                  "strike_price": null
                  "option_type": null
                "main_leg":
                  "order_type": "RL-MKT"
                  "quantity": 50
                  "price": 0
                "stoploss_leg":
                  "legs":
                    -
                      "quantity": 0
                      "price": 97
                      "trigger_price": 98
                "order_identifier": "108108108"
      "responses":
        "200":
          "description": "Order placed successfully"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Response for request"
                    "default": "success"
                    "example": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                    "example": "s-101"
                  "message":
                    "type": "string"
                    "description": "Success Message"
                    "example": "Success Message"
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
  "/transactional/v1/orders/cover/{exchange}/{order_id}":
    "put":
      "summary": "Modify Cover Order"
      "description": "The Modify cover order API lets you modify a pending cover order."
      "tags":
        - "Order"
      "parameters":
        -
          "in": "path"
          "name": "exchange"
          "schema":
            "type": "string"
          "required": true
          "description": "Exchange segment"
        -
          "in": "path"
          "name": "order_id"
          "schema":
            "type": "string"
          "required": true
          "description": "order id, It must be URL encoded as it contains special characters."
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "properties":
                "main_leg":
                  "type": "object"
                  "properties":
                    "order_type":
                      "type": "string"
                      "description": "Type of order. Only RL-MKT is supported."
                    "quantity":
                      "type": "integer"
                      "description": "Number of quantity to transact."
                    "traded_quantity":
                      "type": "integer"
                      "description": "Cumulative traded quantity of the order. Data to be passed in this field is available in order book response."
                    "price":
                      "type": "number"
                      "default": 0
                      "description": "Price at which main leg of cover order will be placed. It should be 0."
                  "required":
                    - "order_type"
                    - "quantity"
                    - "traded_quantity"
                "stoploss_leg":
                  "type": "object"
                  "properties":
                    "legs":
                      "type": "array"
                      "items":
                        "type": "object"
                        "properties":
                          "quantity":
                            "type": "integer"
                            "default": 0
                            "description": "Number of quantity to transact. Value will be ignored currently."
                          "price":
                            "type": "number"
                            "default": 0
                            "description": "Price at which stoploss order should be executed."
                          "trigger_price":
                            "type": "number"
                            "description": "Price at which stoploss order should be triggered."
                        "required":
                          - "trigger_price"
              "example":
                "main_leg":
                  "order_type": "RL-MKT"
                  "quantity": 50
                  "traded_quantity": 50
                  "price": 0
                "stoploss_leg":
                  "legs":
                    -
                      "quantity": 0
                      "price": 97
                      "trigger_price": 98
      "responses":
        "200":
          "description": "Cover order modified successfully."
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Response for request"
                    "default": "success"
                    "example": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                    "example": "s-101"
                  "message":
                    "type": "string"
                    "description": "Success Message"
                    "example": "Success Message"
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
    "delete":
      "summary": "Cancel Cover Order"
      "description": "The Cancel cover order API lets you cancel a pending cover order."
      "tags":
        - "Order"
      "parameters":
        -
          "in": "path"
          "name": "exchange"
          "schema":
            "type": "string"
          "required": true
          "description": "Exchange segment"
        -
          "in": "path"
          "name": "order_id"
          "schema":
            "type": "string"
          "required": true
          "description": "Order id. It must be URL encoded as it contains special characters."
      "responses":
        "200":
          "description": "Order cancelled successfully."
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Response for request"
                    "default": "success"
                    "example": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                    "example": "s-101"
                  "message":
                    "type": "string"
                    "description": "Success Message"
                    "example": "Success Message"
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
  "/transactional/v1/orders/bracket":
    "post":
      "summary": "Place Bracket Order"
      "description": "Bracket order is three-legged order. Along with the execution of main leg order, the system places two more orders i.e. profit leg and stoploss leg. It allows traders to place an order along with Stop loss and Profit order in single request."
      "tags":
        - "Order"
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "properties":
                "scrip_info":
                  "type": "object"
                  "description": "Scrip information can be sent in 2 ways. either by sending exchange and scrip token or by sending scrip details i.e. exchange, symbol, series, expiry, strike price & option type."
                  "properties":
                    "exchange":
                      "type": "string"
                      "enum":
                        - "NSE_EQ"
                        - "NSE_FO"
                        - "BSE_EQ"
                        - "BSE_FO"
                        - "MCX_FO"
                        - "NCDEX_FO"
                        - "NSE_CUR"
                        - "NSE_COMM"
                        - "BSE_CUR"
                        - "BSE_COMM"
                        - "ICEX_FO"
                        - "MSE_EQ"
                        - "MSE_FO"
                        - "MSE_CUR"
                        - "NSE_OTS"
                      "description": "Exchange segment."
                    "scrip_token":
                      "type": "integer"
                      "description": "Exchange token number of the scrip or instrument."
                    "symbol":
                      "type": "string"
                      "description": "Symbol."
                    "series":
                      "type": "string"
                      "description": "Series, Applicable for equity instruments."
                    "expiry_date":
                      "type": "string"
                      "description": "Expiry date. date format is yyyy-mm-dd. Applicable for future & options."
                    "strike_price":
                      "type": "number"
                      "description": "Strike price. Applicable for options."
                    "option_type":
                      "type": "string"
                      "enum":
                        - "CE"
                        - "PE"
                      "description": "Option type. Applicable for options."
                  "required":
                    - "exchange"
                "transaction_type":
                  "type": "string"
                  "description": "Order is BUY or SELL."
                "main_leg":
                  "type": "object"
                  "properties":
                    "order_type":
                      "type": "string"
                      "description": "Type of order. Only RL and RL-MKT is supported."
                    "quantity":
                      "type": "integer"
                      "description": "Number of quantity to transact."
                    "price":
                      "type": "number"
                      "default": 0
                      "description": "Price at which main leg of bracket order will be placed."
                    "trigger_price":
                      "type": "number"
                      "default": 0
                      "description": "This should be 0 as of now."
                  "required":
                    - "order_type"
                    - "quantity"
                "stoploss_leg":
                  "type": "object"
                  "properties":
                    "legs":
                      "type": "array"
                      "items":
                        "type": "object"
                        "properties":
                          "quantity":
                            "type": "integer"
                            "default": 0
                            "description": "Number of quantity to transact. Value will be ignored currently."
                          "price":
                            "type": "number"
                            "description": "Price at which stoploss order should be executed."
                          "trigger_price":
                            "type": "number"
                            "description": "Price at which stoploss order should be triggered."
                        "required":
                          - "price"
                          - "trigger_price"
                    "trail":
                      "type": "object"
                      "properties":
                        "ltp_jump_price":
                          "type": "number"
                          "default": 0
                          "description": "Incremental value by which LTP price changes when market moves in your favor."
                        "stoploss_jump_price":
                          "type": "number"
                          "default": 0
                          "description": "Incremental value by which stoploss price changes when market moves in your favor."
                "profit_leg":
                  "type": "object"
                  "properties":
                    "legs":
                      "type": "array"
                      "items":
                        "type": "object"
                        "properties":
                          "quantity":
                            "type": "integer"
                            "default": 0
                            "description": "Number of quantity to transact. Value will be ignored currently."
                          "price":
                            "type": "number"
                            "description": "Price at which profit order should be executed."
                        "required":
                          - "price"
                "order_identifier":
                  "type": "string"
                  "maxLength": 8
                  "description": "An optional field to apply to an order to track it."
                "part_code":
                  "type": "string"
                  "description": "Participant code"
                "algo_id":
                  "type": "string"
                  "description": "Algo id for strategry generated orders"
                "strategy_id":
                  "type": "string"
                  "description": "Strategy id for strategry generated orders"
                "vender_Code":
                  "type": "string"
                  "description": "Vender code for inhouse application"
              "required":
                - "scrip_info"
                - "transaction_type"
              "example":
                "scrip_info":
                  "exchange": "NSE_EQ"
                  "scrip_token": 22
                  "symbol": null
                  "series": null
                  "expiry_date": null
                  "strike_price": null
                  "option_type": null
                "transaction_type": "BUY"
                "main_leg":
                  "order_type": "RL"
                  "quantity": 50
                  "price": 0
                  "trigger_price": 0
                "stoploss_leg":
                  "legs":
                    "quantity": 0
                    "price": 97
                    "trigger_price": 98
                  "trail":
                    "ltp_jump_price": 1.25
                    "stoploss_jump_price": 0.75
                "profit_leg":
                  "legs":
                    -
                      "quantity": 0
                      "price": 102
                "order_identifier": "108108108"
      "responses":
        "200":
          "description": "Bracket order placed successfully."
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Response for request"
                    "default": "success"
                    "example": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                    "example": "s-101"
                  "message":
                    "type": "string"
                    "description": "Success Message"
                    "example": "Success Message"
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
  "/transactional/v1/orders/bracket/{exchange}/{order_id}":
    "put":
      "summary": "Modify Bracket Order"
      "description": "The Modify bracket order API lets you modify a pending bracket order. The expected parameter in the API order_id should be the main leg order id (as received in response from place bracket order API)."
      "tags":
        - "Order"
      "parameters":
        -
          "in": "path"
          "name": "exchange"
          "schema":
            "type": "string"
          "required": true
          "description": "Exchange segment"
        -
          "in": "path"
          "name": "order_id"
          "schema":
            "type": "string"
          "required": true
          "description": "Order id. It must be URL encoded as it contains special characters."
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "properties":
                "main_leg":
                  "type": "object"
                  "properties":
                    "order_type":
                      "type": "string"
                      "description": "Type of order. Only RL and RL-MKT is supported. Leg is allowed to modify only if it is pending.."
                    "quantity":
                      "type": "integer"
                      "description": "Number of quantity to transact."
                    "traded_quantity":
                      "type": "integer"
                      "description": "Cumulative traded quantity of the order. Data to be passed in this field is available in order book response."
                    "price":
                      "type": "number"
                      "default": 0
                      "description": "Price at which main leg of bracket order will be placed."
                    "trigger_price":
                      "type": "number"
                      "default": 0
                      "description": "Price should be always."
                  "required":
                    - "order_type"
                    - "quantity"
                    - "traded_quantity"
                "stoploss_leg":
                  "type": "object"
                  "properties":
                    "legs":
                      "type": "array"
                      "items":
                        "type": "object"
                        "properties":
                          "quantity":
                            "type": "integer"
                            "default": 0
                            "description": "Number of quantity to transact. Value will be ignored currently. Leg is allowed to modify only if it is pending."
                          "price":
                            "type": "number"
                            "description": "Price at which stoploss order should be executed."
                          "trigger_price":
                            "type": "number"
                            "description": "Price at which stoploss order should be triggered."
                        "required":
                          - "price"
                          - "trigger_price"
                    "trail":
                      "type": "object"
                      "properties":
                        "ltp_jump_price":
                          "type": "number"
                          "default": 0
                          "description": "Incremental value by which LTP price changes when market moves in your favor."
                        "stoploss_jump_price":
                          "type": "number"
                          "default": 0
                          "description": "Incremental value by which stoploss price changes when market moves in your favor."
                "profit_leg":
                  "type": "object"
                  "properties":
                    "legs":
                      "type": "array"
                      "items":
                        "type": "object"
                        "properties":
                          "quantity":
                            "type": "integer"
                            "default": 0
                            "description": "Number of quantity to transact. Value will be ignored currently. Leg is allowed to modify only if it is pending."
                          "price":
                            "type": "number"
                            "description": "Price at which profit order should be executed."
                        "required":
                          - "price"
                "fields_modified":
                  "type": "object"
                  "properties":
                    "main_leg_price":
                      "type": "boolean"
                      "description": "set true if main leg price has been altered."
                    "main_leg_qty":
                      "type": "boolean"
                      "description": "set true if main leg qty has been altered."
                    "stoploss_leg_price":
                      "type": "boolean"
                      "description": "set true if stoploss price or trigger price have been altered."
                    "stoploss_trail_price":
                      "type": "boolean"
                      "description": "set true if stoploss jump price or ltp jump price have been altered."
                    "profit_leg_price":
                      "type": "boolean"
                      "description": "set true if profit leg price has been altered."
                  "required":
                    - "main_leg_price"
                    - "main_leg_qty"
                    - "stoploss_leg_price"
                    - "stoploss_trail_price"
                    - "profit_leg_price"
              "example":
                "main_leg":
                  "order_type": "RL"
                  "quantity": 50
                  "traded_quantity": 50
                  "price": 100
                  "trigger_price": 0
                "stoploss_leg":
                  "legs":
                    -
                      "quantity": 0
                      "price": 97
                      "trigger_price": 98
                  "trail":
                    "ltp_jump_price": 1.25
                    "stoploss_jump_price": 0.75
                "profit_leg":
                  "legs":
                    -
                      "quantity": 0
                      "price": 102
                "fields_modified":
                  "main_leg_price": true
                  "main_leg_qty": true
                  "stoploss_leg_price": true
                  "stoploss_trail_price": true
                  "profit_leg_price": true
      "responses":
        "200":
          "description": "Bracket order modified successfully."
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Response for request"
                    "default": "success"
                    "example": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                    "example": "s-101"
                  "message":
                    "type": "string"
                    "description": "Success Message"
                    "example": "Success Message"
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
  "/transactional/v1/orders/bracket/{order_id}":
    "delete":
      "summary": "Exit Bracket Order"
      "description": "The exit bracket order API lets you exit the that particular order of a user."
      "tags":
        - "Order"
      "parameters":
        -
          "in": "path"
          "name": "exchange"
          "schema":
            "type": "string"
          "required": true
          "description": "Exchange segment"
        -
          "in": "path"
          "name": "order_id"
          "schema":
            "type": "string"
          "required": true
          "description": "Order id"
      "responses":
        "200":
          "description": "succsess response"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Response for request"
                    "default": "success"
                    "example": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                    "example": "s-101"
                  "message":
                    "type": "string"
                    "description": "Success Message"
                    "example": "Success Message"
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
  "/transactional/v1/trades":
    "get":
      "summary": "Trade book"
      "description": "The Trade Book API lets you fetch list of trades executed of current day by the user"
      "tags":
        - "Order"
      "parameters":
        -
          "in": "query"
          "name": "offset"
          "schema":
            "type": "integer"
          "description": "Specifies the page number of the collection to be displayed"
          "required": true
        -
          "in": "query"
          "name": "limit"
          "schema":
            "type": "integer"
          "description": "Limits the number of items on a page"
          "required": true
        -
          "in": "query"
          "name": "order_id"
          "schema":
            "type": "string"
          "description": "Pass order id to filter records based on order id. It must be URL encoded as it contains special characters."
      "responses":
        "200":
          "description": "succsess response"
          "content":
            "application/json":
              "schema":
                "allOf":
                  -
                    "type": "object"
                    "properties":
                      "status":
                        "type": "string"
                        "description": "Response for request"
                        "default": "success"
                        "example": "success"
                      "code":
                        "type": "string"
                        "description": "Response code to user request"
                        "example": "s-101"
                      "message":
                        "type": "string"
                        "description": "Success Message"
                        "example": "Success Message"
                  -
                    "type": "object"
                    "properties":
                      "data":
                        "type": "array"
                        "items":
                          "properties":
                            "order_id":
                              "type": "string"
                              "description": "It is system generated unique order number."
                            "exchange":
                              "type": "string"
                              "description": "Exchange segment."
                            "scrip_token":
                              "type": "integer"
                              "description": "Exchange token number of the scrip or instrument."
                            "trade_no":
                              "type": "string"
                              "description": "Exchange Trade No."
                            "exchange_order_no":
                              "type": "string"
                              "description": "Exchange order number."
                            "transaction_type":
                              "type": "string"
                              "description": "BUY or SELL."
                            "product_type":
                              "type": "string"
                              "description": "Product type."
                            "order_type":
                              "type": "string"
                              "description": "Order type."
                            "traded_quantity":
                              "type": "integer"
                              "description": "Cumulative traded quantity of the order."
                            "trade_price":
                              "type": "integer"
                              "description": "Price at which trade was placed."
                            "symbol":
                              "type": "string"
                              "description": "Symbol."
                            "series":
                              "type": "string"
                              "description": "Series."
                            "instrument":
                              "type": "number"
                              "description": "Instrument name."
                            "expiry_date":
                              "type": "string"
                              "description": "Expiry date."
                            "strike_price":
                              "type": "string"
                              "description": "Strike price."
                            "option_type":
                              "type": "string"
                              "description": "Option type."
                            "trade_timestamp":
                              "type": "string"
                              "description": "Timestamp at which trade was registered by the OMS."
                            "initiated_by":
                              "type": "string"
                              "description": "Application id from where order is placed. This may different from source as order can be placed from dealer terminals also."
                            "modified_by":
                              "type": "string"
                              "description": "Application id from where order is modified. This may different from source as order can be modified from dealer terminals also."
                            "order_identifier":
                              "type": "string"
                              "maxLength": 8
                              "description": "An optional field to apply to an order to track it."
                      "metadata":
                        "type": "object"
                        "properties":
                          "total_records":
                            "type": "number"
                            "description": "Total records."
                "example":
                  "status": "success"
                  "code": "s-101"
                  "message": "Success message"
                  "data":
                    "order_id": "123456"
                    "exchange": "NSE_EQ"
                    "scrip_token": 22
                    "trade_no": "12345678"
                    "exchange_order_no": "87987978"
                    "transaction_type": "BUY"
                    "product_type": "DELIVERY"
                    "order_type": "RL"
                    "trade_quantity": 50
                    "trade_price": 100
                    "symbol": "ACC"
                    "series": "EQ"
                    "instrument": "EQUITIES"
                    "expiry_date": ""
                    "strike_price": null
                    "option_type": ""
                    "trade_timestamp": "2020-01-20 12:10:10"
                    "initiated_by": "WEBAPI"
                    "modified_by": ""
                    "order_identifier": "108108108"
                  "metadata":
                    "total_records": 500
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
  "/transactional/v1/orders":
    "get":
      "summary": "Order Book"
      "description": "The Order book API lets you fetch all orders of a user along with the latest status."
      "tags":
        - "Order"
      "parameters":
        -
          "in": "query"
          "name": "offset"
          "schema":
            "type": "integer"
          "description": "Specifies the page number of the collection to be displayed"
          "required": true
        -
          "name": "limit"
          "in": "query"
          "schema":
            "type": "integer"
          "description": "Limits the number of items on a page"
          "required": true
        -
          "name": "order_id"
          "in": "query"
          "schema":
            "type": "string"
          "description": "Pass order id to filter records based on order id. It must be URL encoded as it contains special characters."
      "responses":
        "200":
          "description": "Orders fetched successfully"
          "content":
            "application/json":
              "schema":
                "allOf":
                  -
                    "type": "object"
                    "properties":
                      "status":
                        "type": "string"
                        "description": "Response for request"
                        "default": "success"
                        "example": "success"
                      "code":
                        "type": "string"
                        "description": "Response code to user request"
                        "example": "s-101"
                      "message":
                        "type": "string"
                        "description": "Success Message"
                        "example": "Success Message"
                  -
                    "type": "object"
                    "properties":
                      "data":
                        "type": "array"
                        "items":
                          "properties":
                            "order_id":
                              "type": "string"
                              "description": "It is system generated unique order number."
                            "exchange":
                              "type": "string"
                              "description": "Exchange segment."
                            "scrip_token":
                              "type": "integer"
                              "description": "Exchange token number of the scrip or instrument."
                            "exchange_order_no":
                              "type": "string"
                              "description": "Exchange order number."
                            "status":
                              "type": "string"
                              "description": "Order status."
                            "error_reason":
                              "type": "string"
                              "description": "Error message why order is cancelled, rejected or not modified."
                            "transaction_type":
                              "type": "string"
                              "description": "BUY or SELL."
                            "product_type":
                              "type": "string"
                              "description": "Product type."
                            "order_type":
                              "type": "string"
                              "description": "Order type."
                            "total_quantity":
                              "type": "integer"
                              "description": "Original quantity of the order."
                            "pending_quantity":
                              "type": "integer"
                              "description": "Pending quantity of the order."
                            "traded_quantity":
                              "type": "integer"
                              "description": "Cumulative traded quantity of the order."
                            "disclosed_quantity":
                              "type": "integer"
                              "description": "Number of quantity to disclosed to the market."
                            "order_price":
                              "type": "number"
                              "description": "Price at which order was placed."
                            "trigger_price":
                              "type": "number"
                              "description": "Trigger price."
                            "validity":
                              "type": "string"
                              "description": "Order validity."
                            "validity_days":
                              "type": "integer"
                              "description": "Number of days order needs to be carried ahead for validity GTD orders."
                            "symbol":
                              "type": "string"
                              "description": "Symbol."
                            "series":
                              "type": "string"
                              "description": "Series."
                            "instrument":
                              "type": "number"
                              "description": "Instrument name."
                            "expiry_date":
                              "type": "string"
                              "description": "Expiry date."
                            "strike_price":
                              "type": "string"
                              "description": "Strike price."
                            "option_type":
                              "type": "string"
                              "description": "Option type."
                            "order_timestamp":
                              "type": "string"
                              "description": "Timestamp at which order was registered by the OMS."
                            "exchange_timestamp":
                              "type": "string"
                              "description": "Timestamp at which order was registered by the exchange."
                            "initiated_by":
                              "type": "string"
                              "description": "Application id from where order is placed. This may different from source as order can be placed from dealer terminals also."
                            "modified_by":
                              "type": "string"
                              "description": "Application id from where order is modified. This may different from source as order can be modified from dealer terminals also."
                            "is_amo_order":
                              "type": "string"
                              "description": "Is AMO order."
                            "order_identifier":
                              "type": "string"
                              "maxLength": 8
                              "description": "An optional field to apply to an order to track it."
                            "bracket_details":
                              "type": "object"
                              "properties":
                                "parent_order_id":
                                  "type": "string"
                                  "description": "order id of Main leg."
                                "leg_indicator":
                                  "type": "string"
                                  "description": "Leg indicator"
                                "stoploss_price":
                                  "type": "number"
                                  "description": "Stoploss leg price"
                                "stoploss_trigger_price":
                                  "type": "number"
                                  "description": "Stoploss leg trigger price"
                                "profit_price":
                                  "type": "number"
                                  "description": "Profit leg price"
                                "stoploss_jump_price":
                                  "type": "number"
                                  "description": "Incremental value by which stoploss price changes when market moves in your favor."
                                "ltp_jump_price":
                                  "type": "number"
                                  "description": "Incremental value by which LTP price changes when market moves in your favor."
                                "bo_order_id":
                                  "type": "string"
                                  "description": "Bracket order id"
                                "bo_order_status":
                                  "type": "string"
                                  "description": "Bracket order status, apart from above mentioned statuses, status can be NOT_INITIATED, COMPLETED, STOPPED and CONVERTED."
                                "bo_modify_flag":
                                  "type": "number"
                                  "description": "This field value denotes which legs can be modified. 0- Modification is not allowed 1- Main leg 2- Stop loss leg 4- Profit leg 6- Both stop loss & profit leg 7- All legs"
                      "metadata":
                        "type": "object"
                        "properties":
                          "total_records":
                            "type": "number"
                            "description": "Total records."
                "example":
                  "status": "success"
                  "code": "s-101"
                  "message": "Success message"
                  "data":
                    -
                      "order_id": "123456"
                      "exchange": "NSE_EQ"
                      "scrip_token": 22
                      "exchange_order_no": "87987978"
                      "status": "PENDING"
                      "error_reason": ""
                      "transaction_type": "BUY"
                      "product_type": "INTRADAY"
                      "order_type": "RL"
                      "total_quantity": 50
                      "pending_quantity": 10
                      "traded_quantity": 40
                      "disclosed_quantity": 25
                      "order_price": 100
                      "trigger_price": 0
                      "validity": "DAY"
                      "validity_days": 0
                      "symbol": "ACC"
                      "series": "EQ"
                      "instrument": "EQUITIES"
                      "expiry_date": ""
                      "strike_price": null
                      "option_type": ""
                      "order_timestamp": "2020-01-20 12:10:10"
                      "exchange_timestamp": "2020-01-20 12:11:10"
                      "initiated_by": "TEST"
                      "modified_by": "TEST"
                      "is_amo_order": false
                      "order_identifier": "108108108"
                      "bracket_details":
                        "parent_order_id": "123456"
                        "leg_indicator": "MAIN_LEG"
                        "stoploss_price": 100
                        "stoploss_trigger_price": 102
                        "profit_price": 105
                        "stoploss_jump_price": "1,"
                        "ltp_jump_price": 1
                        "bo_order_id": "1"
                        "bo_order_status": "PENDING"
                        "bo_modify_flag": 7
                  "metadata":
                    "total_records": 500
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
  "/transactional/v1/orders/{order_id}":
    "get":
      "summary": "Order history"
      "description": "Order history keeps audit trail (modifications/changes) of an order. It will provide track of a particular order along with its activities done."
      "tags":
        - "Order"
      "parameters":
        -
          "in": "path"
          "name": "order_id"
          "schema":
            "type": "string"
          "required": true
          "description": "order id, It must be URL encoded as it contains special characters."
      "responses":
        "200":
          "description": "succsess response"
          "content":
            "application/json":
              "schema":
                "allOf":
                  -
                    "type": "object"
                    "properties":
                      "status":
                        "type": "string"
                        "description": "Response for request"
                        "default": "success"
                        "example": "success"
                      "code":
                        "type": "string"
                        "description": "Response code to user request"
                        "example": "s-101"
                      "message":
                        "type": "string"
                        "description": "Success Message"
                        "example": "Success Message"
                  -
                    "type": "object"
                    "properties":
                      "data":
                        "type": "array"
                        "items":
                          "properties":
                            "order_id":
                              "type": "string"
                              "description": "It is system generated unique order number."
                            "exchange":
                              "type": "string"
                              "description": "Exchange segment."
                            "scrip_token":
                              "type": "integer"
                              "description": "Exchange token number of the scrip or instrument."
                            "exchange_order_no":
                              "type": "string"
                              "description": "Exchange order number."
                            "status":
                              "type": "string"
                              "description": "Order status."
                            "error_reason":
                              "type": "string"
                              "description": "Error message why order is cancelled, rejected or not modified."
                            "transaction_type":
                              "type": "string"
                              "description": "BUY or SELL."
                            "product_type":
                              "type": "string"
                              "description": "Product type."
                            "order_type":
                              "type": "string"
                              "description": "Order type."
                            "total_quantity":
                              "type": "integer"
                              "description": "Original quantity of the order."
                            "pending_quantity":
                              "type": "integer"
                              "description": "Pending quantity of the order."
                            "traded_quantity":
                              "type": "integer"
                              "description": "Cumulative traded quantity of the order."
                            "disclosed_quantity":
                              "type": "integer"
                              "description": "Number of quantity to disclosed to the market."
                            "order_price":
                              "type": "number"
                              "description": "Price at which order was placed."
                            "trigger_price":
                              "type": "number"
                              "description": "Trigger price."
                            "validity":
                              "type": "string"
                              "description": "Order validity."
                            "validity_days":
                              "type": "integer"
                              "description": "Number of days order needs to be carried ahead for validity GTD orders."
                            "symbol":
                              "type": "string"
                              "description": "Symbol."
                            "series":
                              "type": "string"
                              "description": "Series."
                            "instrument":
                              "type": "number"
                              "description": "Instrument name."
                            "expiry_date":
                              "type": "string"
                              "description": "Expiry date."
                            "strike_price":
                              "type": "string"
                              "description": "Strike price."
                            "option_type":
                              "type": "string"
                              "description": "Option type."
                            "order_timestamp":
                              "type": "string"
                              "description": "Timestamp at which order was registered by the OMS."
                            "exchange_timestamp":
                              "type": "string"
                              "description": "Timestamp at which order was registered by the exchange."
                            "initiated_by":
                              "type": "string"
                              "description": "Application id from where order is placed. This may different from source as order can be placed from dealer terminals also."
                            "modified_by":
                              "type": "string"
                              "description": "Application id from where order is modified. This may different from source as order can be modified from dealer terminals also."
                            "is_amo_order":
                              "type": "string"
                              "description": "Is AMO order."
                            "order_identifier":
                              "type": "string"
                              "maxLength": 8
                              "description": "An optional field to apply to an order to track it."
                            "bracket_details":
                              "type": "object"
                              "properties":
                                "parent_order_id":
                                  "type": "string"
                                  "description": "order id of Main leg."
                                "leg_indicator":
                                  "type": "string"
                                  "description": "Leg indicator"
                                "stoploss_price":
                                  "type": "number"
                                  "description": "Stoploss leg price"
                                "stoploss_trigger_price":
                                  "type": "number"
                                  "description": "Stoploss leg trigger price"
                                "profit_price":
                                  "type": "number"
                                  "description": "Profit leg price"
                                "stoploss_jump_price":
                                  "type": "number"
                                  "description": "Incremental value by which stoploss price changes when market moves in your favor."
                                "ltp_jump_price":
                                  "type": "number"
                                  "description": "Incremental value by which LTP price changes when market moves in your favor."
                                "bo_order_id":
                                  "type": "string"
                                  "description": "Bracket order id"
                                "bo_order_status":
                                  "type": "string"
                                  "description": "Bracket order status, apart from above mentioned statuses, status can be NOT_INITIATED, COMPLETED, STOPPED and CONVERTED."
                                "bo_modify_flag":
                                  "type": "number"
                                  "description": "This field value denotes which legs can be modified. 0- Modification is not allowed 1- Main leg 2- Stop loss leg 4- Profit leg 6- Both stop loss & profit leg 7- All legs"
                      "metadata":
                        "type": "object"
                        "properties":
                          "total_records":
                            "type": "number"
                            "description": "Total records."
                "example":
                  "status": "success"
                  "code": "s-101"
                  "message": "Success message"
                  "data":
                    -
                      "order_id": "123456"
                      "exchange": "NSE_EQ"
                      "scrip_token": 22
                      "exchange_order_no": "87987978"
                      "status": "PENDING"
                      "error_reason": ""
                      "transaction_type": "BUY"
                      "product_type": "INTRADAY"
                      "order_type": "RL"
                      "total_quantity": 50
                      "pending_quantity": 10
                      "traded_quantity": 40
                      "disclosed_quantity": 25
                      "order_price": 100
                      "trigger_price": 0
                      "validity": "DAY"
                      "validity_days": 0
                      "symbol": "ACC"
                      "series": "EQ"
                      "instrument": "EQUITIES"
                      "expiry_date": ""
                      "strike_price": null
                      "option_type": ""
                      "order_timestamp": "2020-01-20 12:10:10"
                      "exchange_timestamp": "2020-01-20 12:11:10"
                      "initiated_by": "TEST"
                      "modified_by": "TEST"
                      "is_amo_order": false
                      "order_identifier": "108108108"
                      "bracket_details":
                        "parent_order_id": "123456"
                        "leg_indicator": "MAIN_LEG"
                        "stoploss_price": 100
                        "stoploss_trigger_price": 102
                        "profit_price": 105
                        "stoploss_jump_price": "1,"
                        "ltp_jump_price": 1
                        "bo_order_id": "1"
                        "bo_order_status": "PENDING"
                        "bo_modify_flag": 7
                  "metadata":
                    "total_records": 500
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
  "/transactional/v1/portfolio/positions/{type}":
    "get":
      "summary": "Positions"
      "description": "Positions contain the user open position across exchange segments. The Equity positions which are passed overnight are transferred to the holdings portfolio the following day. The positions API provides two sets of positions i.e. Daily and Expiry where position tagged as ‘Expiry’ is the carryforwarded positions and position tagged as ‘Daily’ is today's created positions."
      "tags":
        - "Portfolio"
      "parameters":
        -
          "in": "path"
          "name": "type"
          "schema":
            "type": "integer"
            "default": "daily"
            "enum":
              - "daily"
              - "expiry"
          "required": true
          "description": "Type of position to fetch daily or expiry"
      "responses":
        "200":
          "description": "succsess response"
          "content":
            "application/json":
              "schema":
                "allOf":
                  -
                    "type": "object"
                    "properties":
                      "status":
                        "type": "string"
                        "description": "Response for request"
                        "default": "success"
                        "example": "success"
                      "code":
                        "type": "string"
                        "description": "Response code to user request"
                        "example": "s-101"
                      "message":
                        "type": "string"
                        "description": "Success Message"
                        "example": "Success Message"
                  -
                    "type": "object"
                    "properties":
                      "data":
                        "type": "array"
                        "items":
                          "properties":
                            "exchange":
                              "type": "string"
                              "description": "Exchange segment."
                            "scrip_token":
                              "type": "integer"
                              "description": "Exchange token number of the scrip or instrument."
                            "product_type":
                              "type": "string"
                              "description": "Product type."
                            "symbol":
                              "type": "string"
                              "description": "Symbol."
                            "series":
                              "type": "string"
                              "description": "Series."
                            "instrument":
                              "type": "number"
                              "description": "Instrument name."
                            "expiry_date":
                              "type": "string"
                              "description": "Expiry date."
                            "strike_price":
                              "type": "string"
                              "description": "Strike price."
                            "option_type":
                              "type": "string"
                              "description": "Option type."
                            "buy_quantity":
                              "type": "integer"
                              "description": "Buy quantity of the order."
                            "avg_buy_price":
                              "type": "integer"
                              "description": "Buy Price of the order."
                            "buy_value":
                              "type": "integer"
                              "description": "Total Buy Value"
                            "sell_quantity":
                              "type": "integer"
                              "description": "Sell quantity of the order."
                            "avg_sell_price":
                              "type": "integer"
                              "description": "Sell Price of the order."
                            "sell_value":
                              "type": "integer"
                              "description": "Total Sell Value"
                            "net_quantity":
                              "type": "integer"
                              "description": "Net quantity of the order."
                            "avg_net_price":
                              "type": "integer"
                              "description": "Net Price of the order."
                            "net_value":
                              "type": "integer"
                              "description": "Total Value"
                            "ltp":
                              "type": "integer"
                              "description": "LTP of Scrip"
                            "close_price":
                              "type": "integer"
                              "description": "Close Price"
                            "multiplier":
                              "type": "integer"
                              "description": "Order type."
                "example":
                  "status": "success"
                  "code": "s-101"
                  "message": "Success message"
                  "data":
                    "exchange": "NSE_EQ"
                    "scrip_token": 22
                    "product_type": "INTRADAY"
                    "symbol": "ACC"
                    "series": "EQ"
                    "instrument": "EQUITIES"
                    "expiry_date": ""
                    "strike_price": null
                    "option_type": ""
                    "buy_quantity": 10
                    "avg_buy_price": 1500
                    "buy_value": 15000
                    "sell_quantity": 10
                    "avg_sell_price": 1600
                    "sell_value": 16000
                    "net_quantity": 0
                    "net_price": 0
                    "net_value": 0
                    "ltp": 1560
                    "close_price": 1500
                    "multiplier": 1
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
  "/transactional/v1/portfolio/positions/":
    "put":
      "summary": "Position Conversion"
      "description": "Position Conversion API enable users to convert their open positions from source product to target product i.e. Intraday to Delivery or vice versa."
      "tags":
        - "Portfolio"
      "requestBody":
        "required": true
        "content":
          "application/json":
            "schema":
              "type": "object"
              "properties":
                "exchange":
                  "type": "string"
                  "description": "Exchange segment."
                "scrip_token":
                  "type": "integer"
                  "description": "Exchange token number of the scrip or instrument."
                "transaction_type":
                  "type": "string"
                  "description": "Order is BUY or SELL."
                "quantity":
                  "type": "integer"
                  "description": "Number of quantity to convert."
                "old_product_type":
                  "type": "string"
                  "description": "Old product type."
                "new_product_type":
                  "type": "string"
                  "description": "New product type."
                "bo_order_id":
                  "type": "string"
                  "description": "Bracket order id, Bracket order position conversion is allowed individual bracket order wise only. bo_order_id need to pass here. This number is available in order book."
              "required":
                - "exchange"
                - "scrip_token"
                - "transaction_type"
                - "quantity"
                - "old_product_type"
                - "new_product_type"
              "example":
                "exchange": "NSE_EQ"
                "scrip_token": 22
                "transaction_type": "BUY"
                "quantity": 50
                "old_product_type": "INTRADAY"
                "new_product_type": "DELIVERY"
                "bo_order_id": ""
      "responses":
        "200":
          "description": "Position converted successfully"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Response for request"
                    "default": "success"
                    "example": "success"
                  "code":
                    "type": "string"
                    "description": "Response code to user request"
                    "example": "s-101"
                  "message":
                    "type": "string"
                    "description": "Success Message"
                    "example": "Success Message"
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"
  "/transactional/v1/portfolio/holdings":
    "get":
      "summary": "Holdings"
      "description": "The Holding API provide the detail of user's holding as uploaded by broker. Stock bought under Delivery Product earlier which payout is pending with exchange is show under holding i.e. User bought 10 shares of reliance on Monday then on Tuesday it will be shown under Holding."
      "tags":
        - "Portfolio"
      "responses":
        "200":
          "description": "Holdings fetched successfully."
          "content":
            "application/json":
              "schema":
                "allOf":
                  -
                    "type": "object"
                    "properties":
                      "status":
                        "type": "string"
                        "description": "Response for request"
                        "default": "success"
                        "example": "success"
                      "code":
                        "type": "string"
                        "description": "Response code to user request"
                        "example": "s-101"
                      "message":
                        "type": "string"
                        "description": "Success Message"
                        "example": "Success Message"
                  -
                    "type": "object"
                    "properties":
                      "data":
                        "type": "array"
                        "items":
                          "properties":
                            "isin":
                              "type": "string"
                              "description": "scrip isin."
                            "security_info":
                              "type": "array"
                              "description": "array of scrips"
                              "items":
                                "properties":
                                  "exchange":
                                    "type": "string"
                                    "description": "Exchange segment"
                                  "scrip_token":
                                    "type": "integer"
                                    "description": "Exchange token number of the scrip or instrument"
                                  "symbol":
                                    "type": "string"
                                    "description": "Symbol"
                            "total_free":
                              "type": "number"
                              "description": "total free qty of DP, Pool and SAR"
                            "dp_free":
                              "type": "number"
                              "description": "free qty of DP"
                            "pool_free":
                              "type": "number"
                              "description": "free qty of pool"
                            "t1_quantity":
                              "type": "number"
                              "description": "free qty of t+1."
                            "average_price":
                              "type": "number"
                              "description": "Average price of scrip"
                            "last_price":
                              "type": "number"
                              "description": "current price of scrip"
                            "pnl":
                              "type": "number"
                              "description": "Gain Loss of scrip"
                            "current_value":
                              "type": "number"
                              "description": "current value of scrip"
                            "inv_value":
                              "type": "number"
                              "description": "invested value of scrip"
                            "product":
                              "type": "integer"
                              "description": "product type of scrip"
                            "collateral_quantity":
                              "type": "number"
                              "description": "collateral quantity"
                            "collateral_value":
                              "type": "number"
                              "description": "collateral value"
                "example":
                  "status": "success"
                  "code": "s-101"
                  "message": "Success message"
                  "data":
                    "isin": "INE516F01016"
                    "security_info":
                      -
                        "exchange": "NSE_EQ"
                        "scrip_token": 22
                        "symbol": "ACC"
                      -
                        "exchange": "BSE_EQ"
                        "scrip_token": 500410
                        "symbol": "ACC"
                    "total_free": 1
                    "dp_free": 0
                    "pool_free": 1
                    "t1_quantity": 1
                    "average_price": 94.75
                    "last_price": 93.75
                    "pnl": -100
                    "current_value": -100
                    "inv_value": -100
                    "product": "DELIVERY"
                    "collateral_quantity": 0
                    "collateral_value": 0
        "400":
          "description": "Bad Request"
          "content":
            "application/json":
              "schema":
                "type": "object"
                "properties":
                  "status":
                    "type": "string"
                    "description": "Error for request"
                    "default": "error"
                    "example": "error"
                  "code":
                    "type": "string"
                    "description": "Error code"
                    "example": "e-101"
                  "message":
                    "type": "string"
                    "description": "Reason for failed request."
                    "example": "Error Message"